factor(predicted_sequences[rowSums(select(predicted_sequences,
-y_test_df, -prediction))
== j, ]$prediction, levels = 0:1))
print(sum(diag(ctbl)) / sum(ctbl[, 2]))
}
for (j in 4:length(timesteps)) {
ctbl <- table(factor(predicted_sequences[rowSums(select(predicted_sequences,
-y_test_df, -prediction))
== j, ]$y_test_df, levels = 0:1),
factor(predicted_sequences[rowSums(select(predicted_sequences,
-y_test_df, -prediction))
== j, ]$prediction, levels = 0:1))
print(sum(diag(ctbl)) / sum(ctbl[, 2]))
}
table(factor(predicted_sequences[rowSums(select(predicted_sequences,
-y_test_df, -prediction))
== 7, ]$y_test_df, levels = 0:1),
factor(predicted_sequences[rowSums(select(predicted_sequences,
-y_test_df, -prediction))
== 7, ]$prediction, levels = 0:1))
table(factor(predicted_sequences[rowSums(select(predicted_sequences,
-y_test_df, -prediction))
== 7, ]$y_test_df, levels = 0:1),
factor(predicted_sequences[rowSums(select(predicted_sequences,
-y_test_df, -prediction))
== 7, ]$prediction, levels = 0:1))[2, 2]
for (j in 4:length(timesteps)) {
ctbl <- table(factor(predicted_sequences[rowSums(select(predicted_sequences,
-y_test_df, -prediction))
== j, ]$y_test_df, levels = 0:1),
factor(predicted_sequences[rowSums(select(predicted_sequences,
-y_test_df, -prediction))
== j, ]$prediction, levels = 0:1))
print(ctbl[2, 2] / sum(ctbl[, 2]))
}
sum(table(factor(predicted_sequences[rowSums(select(predicted_sequences, -y_test_df, -prediction)) == 4, ]$y_test_df, levels = 0:1), factor(predicted_sequences[rowSums(select(predicted_sequences, -y_test_df, -prediction)) == 4, ]$prediction, levels = 0:1)))
for (j in 4:length(timesteps)) {
ctbl <- table(factor(predicted_sequences[rowSums(select(predicted_sequences,
-y_test_df, -prediction))
== j, ]$y_test_df, levels = 0:1),
factor(predicted_sequences[rowSums(select(predicted_sequences,
-y_test_df, -prediction))
== j, ]$prediction, levels = 0:1))
print(sum(diag(ctbl)) / sum(ctbl))
}
for (j in 4:length(timesteps)) {
ctbl <- table(factor(predicted_sequences[rowSums(select(predicted_sequences,
-y_test_df, -prediction))
== j, ]$y_test_df, levels = 0:1),
factor(predicted_sequences[rowSums(select(predicted_sequences,
-y_test_df, -prediction))
== j, ]$prediction, levels = 0:1))
print(2 * (ctbl[2, 2] / sum(ctbl[, 2])) *
(ctbl[2, 2] / sum(ctbl[2, ])) /
((ctbl[2, 2] / sum(ctbl[, 2])) +
(ctbl[2, 2] / sum(ctbl[2, ]))))
}
sum(table(factor(predicted_sequences[rowSums(select(predicted_sequences, -y_test_df, -prediction)) == 16, ]$y_test_df, levels = 0:1), factor(predicted_sequences[rowSums(select(predicted_sequences, -y_test_df, -prediction)) == 16, ]$prediction, levels = 0:1)))
sum(table(factor(predicted_sequences[rowSums(select(predicted_sequences, -y_test_df, -prediction)) == 14, ]$y_test_df, levels = 0:1), factor(predicted_sequences[rowSums(select(predicted_sequences, -y_test_df, -prediction)) == 14, ]$prediction, levels = 0:1)))
table(factor(predicted_sequences[rowSums(select(predicted_sequences, -y_test_df, -prediction)) == 14, ]$y_test_df, levels = 0:1), factor(predicted_sequences[rowSums(select(predicted_sequences, -y_test_df, -prediction)) == 14, ]$prediction, levels = 0:1))
for (j in 4:length(timesteps)) {
ctbl <- table(factor(predicted_sequences[rowSums(select(predicted_sequences,
-y_test_df, -prediction))
== j, ]$y_test_df, levels = 0:1),
factor(predicted_sequences[rowSums(select(predicted_sequences,
-y_test_df, -prediction))
== j, ]$prediction, levels = 0:1))
print(sum(diag(ctbl)) / sum(ctbl))
}
table(factor(predicted_sequences[rowSums(select(predicted_sequences, -y_test_df, -prediction)) == 14, ]$y_test_df, levels = 0:1), factor(predicted_sequences[rowSums(select(predicted_sequences, -y_test_df, -prediction)) == 14, ]$prediction, levels = 0:1))[1, 2]
table(factor(predicted_sequences[rowSums(select(predicted_sequences, -y_test_df, -prediction)) == 4, ]$y_test_df, levels = 0:1), factor(predicted_sequences[rowSums(select(predicted_sequences, -y_test_df, -prediction)) == 4, ]$prediction, levels = 0:1))
table(factor(predicted_sequences[rowSums(select(predicted_sequences, -y_test_df, -prediction)) == 4, ]$y_test_df, levels = 0:1), factor(predicted_sequences[rowSums(select(predicted_sequences, -y_test_df, -prediction)) == 4, ]$prediction, levels = 0:1))[1, 2]
table(factor(predicted_sequences[rowSums(select(predicted_sequences, -y_test_df, -prediction)) == 4, ]$y_test_df, levels = 0:1), factor(predicted_sequences[rowSums(select(predicted_sequences, -y_test_df, -prediction)) == 4, ]$prediction, levels = 0:1))[1, ]
for (j in 4:length(timesteps)) {
ctbl <- table(factor(predicted_sequences[rowSums(select(predicted_sequences,
-y_test_df, -prediction))
== j, ]$y_test_df, levels = 0:1),
factor(predicted_sequences[rowSums(select(predicted_sequences,
-y_test_df, -prediction))
== j, ]$prediction, levels = 0:1))
print(ctbl[1, 2] / sum(ctbl[1, ]))
}
for (j in 4:length(timesteps)) {
ctbl <- table(factor(predicted_sequences[rowSums(select(predicted_sequences,
-y_test_df, -prediction))
== j, ]$y_test_df, levels = 0:1),
factor(predicted_sequences[rowSums(select(predicted_sequences,
-y_test_df, -prediction))
== j, ]$prediction, levels = 0:1))
print(ctbl[2, 2] / sum(ctbl[2, ]))
}
for (j in 4:length(timesteps)) {
ctbl <- table(factor(predicted_sequences[rowSums(select(predicted_sequences,
-y_test_df, -prediction))
== j, ]$y_test_df, levels = 0:1),
factor(predicted_sequences[rowSums(select(predicted_sequences,
-y_test_df, -prediction))
== j, ]$prediction, levels = 0:1))
print(ctbl[1, 1] / sum(ctbl[1, ]))
}
table(factor(predicted_sequences[rowSums(select(predicted_sequences, -y_test_df, -prediction)) == 14, ]$y_test_df, levels = 0:1), factor(predicted_sequences[rowSums(select(predicted_sequences, -y_test_df, -prediction)) == 14, ]$prediction, levels = 0:1))[
table(factor(predicted_sequences[rowSums(select(predicted_sequences, -y_test_df, -prediction)) == 14, ]$y_test_df, levels = 0:1), factor(predicted_sequences[rowSums(select(predicted_sequences, -y_test_df, -prediction)) == 14, ]$prediction, levels = 0:1))
table(factor(predicted_sequences[rowSums(select(predicted_sequences, -y_test_df, -prediction)) == 14, ]$y_test_df, levels = 0:1), factor(predicted_sequences[rowSums(select(predicted_sequences, -y_test_df, -prediction)) == 14, ]$prediction, levels = 0:1)))
table(factor(predicted_sequences[rowSums(select(predicted_sequences, -y_test_df, -prediction)) == 14, ]$y_test_df, levels = 0:1), factor(predicted_sequences[rowSums(select(predicted_sequences, -y_test_df, -prediction)) == 14, ]$prediction, levels = 0:1))
table(factor(predicted_sequences[rowSums(select(predicted_sequences, -y_test_df, -prediction)) == 14, ]$y_test_df, levels = 0:1), factor(predicted_sequences[rowSums(select(predicted_sequences, -y_test_df, -prediction)) == 14, ]$prediction, levels = 0:1))[1, 1]
table(factor(predicted_sequences[rowSums(select(predicted_sequences, -y_test_df, -prediction)) == 14, ]$y_test_df, levels = 0:1), factor(predicted_sequences[rowSums(select(predicted_sequences, -y_test_df, -prediction)) == 14, ]$prediction, levels = 0:1))[1, ]
sum(table(factor(predicted_sequences[rowSums(select(predicted_sequences, -y_test_df, -prediction)) == 14, ]$y_test_df, levels = 0:1), factor(predicted_sequences[rowSums(select(predicted_sequences, -y_test_df, -prediction)) == 14, ]$prediction, levels = 0:1))[1, ])
sum(table(factor(predicted_sequences[rowSums(select(predicted_sequences, -y_test_df, -prediction)) == 15, ]$y_test_df, levels = 0:1), factor(predicted_sequences[rowSums(select(predicted_sequences, -y_test_df, -prediction)) == 15, ]$prediction, levels = 0:1))[1, ])
table(factor(predicted_sequences[rowSums(select(predicted_sequences, -y_test_df, -prediction)) == 15, ]$y_test_df, levels = 0:1), factor(predicted_sequences[rowSums(select(predicted_sequences, -y_test_df, -prediction)) == 15, ]$prediction, levels = 0:1))
table(factor(predicted_sequences[rowSums(select(predicted_sequences, -y_test_df, -prediction)) == 16, ]$y_test_df, levels = 0:1), factor(predicted_sequences[rowSums(select(predicted_sequences, -y_test_df, -prediction)) == 16, ]$prediction, levels = 0:1))
table(factor(predicted_sequences[rowSums(select(predicted_sequences, -y_test_df, -prediction)) == 16, ]$y_test_df, levels = 0:1), factor(predicted_sequences[rowSums(select(predicted_sequences, -y_test_df, -prediction)) == 17, ]$prediction, levels = 0:1))
table(factor(predicted_sequences[rowSums(select(predicted_sequences, -y_test_df, -prediction)) == 17, ]$y_test_df, levels = 0:1), factor(predicted_sequences[rowSums(select(predicted_sequences, -y_test_df, -prediction)) == 17, ]$prediction, levels = 0:1))
View(rates_df)
for (j in 4:18) {
ctbl <- table(factor(predicted_sequences[rowSums(select(predicted_sequences,
-y_test_df, -prediction))
== j, ]$y_test_df, levels = 0:1),
factor(predicted_sequences[rowSums(select(predicted_sequences,
-y_test_df, -prediction))
== j, ]$prediction, levels = 0:1))
print(ctbl[1, 1] / sum(ctbl[1, ]))
}
for (j in 4:18) {
ctbl <- table(factor(predicted_sequences[rowSums(select(predicted_sequences,
-y_test_df, -prediction))
== j, ]$y_test_df, levels = 0:1),
factor(predicted_sequences[rowSums(select(predicted_sequences,
-y_test_df, -prediction))
== j, ]$prediction, levels = 0:1))
print(paste0("TPR: ", ctbl[2, 2] / sum(ctbl[2, ]), ", TNR: ",
ctbl[1, 1] / sum(ctbl[1, ])))
}
for (j in 4:18) {
ctbl <- table(factor(predicted_sequences[rowSums(select(predicted_sequences,
-y_test_df, -prediction))
== j, ]$y_test_df, levels = 0:1),
factor(predicted_sequences[rowSums(select(predicted_sequences,
-y_test_df, -prediction))
== j, ]$prediction, levels = 0:1))
print(paste0("TPR: ", round(ctbl[2, 2] / sum(ctbl[2, ]), 4), ", TNR: ",
round(ctbl[1, 1] / sum(ctbl[1, ])), 4))
}
for (j in 4:18) {
ctbl <- table(factor(predicted_sequences[rowSums(select(predicted_sequences,
-y_test_df, -prediction))
== j, ]$y_test_df, levels = 0:1),
factor(predicted_sequences[rowSums(select(predicted_sequences,
-y_test_df, -prediction))
== j, ]$prediction, levels = 0:1))
print(paste0("TPR: ", round(ctbl[2, 2] / sum(ctbl[2, ]), 4), ", TNR: ",
round(ctbl[1, 1] / sum(ctbl[1, ]), 4)))
}
for (j in 4:18) {
ctbl <- table(factor(predicted_sequences[rowSums(select(predicted_sequences,
-y_test_df, -prediction))
== j, ]$y_test_df, levels = 0:1),
factor(predicted_sequences[rowSums(select(predicted_sequences,
-y_test_df, -prediction))
== j, ]$prediction, levels = 0:1))
print(paste0("TPR: ", round(ctbl[2, 2] / sum(ctbl[2, ]), 4),
", TNR: ", round(ctbl[1, 1] / sum(ctbl[1, ]), 4),
", FPR: ", round(ctbl[1, 2] / sum(ctbl[1, ]), 4),
", FNR: ", round(ctbl[2, 1] / sum(ctbl[2, ]), 4)))
}
for (j in 4:18) {
ctbl <- table(factor(predicted_sequences[rowSums(select(predicted_sequences,
-y_test_df, -prediction))
== j, ]$y_test_df, levels = 0:1),
factor(predicted_sequences[rowSums(select(predicted_sequences,
-y_test_df, -prediction))
== j, ]$prediction, levels = 0:1))
print(paste0("Pitch ", j, "; TPR: ", round(ctbl[2, 2] / sum(ctbl[2, ]), 4),
", TNR: ", round(ctbl[1, 1] / sum(ctbl[1, ]), 4),
", FPR: ", round(ctbl[1, 2] / sum(ctbl[1, ]), 4),
", FNR: ", round(ctbl[2, 1] / sum(ctbl[2, ]), 4)))
}
confusion_table <- function(i) {
table(factor(predicted_sequences[rowSums(select(predicted_sequences,
-y_test_df, -prediction))
== i, ]$y_test_df, levels = 0:1),
factor(predicted_sequences[rowSums(select(predicted_sequences,
-y_test_df, -prediction))
== i, ]$prediction, levels = 0:1))
}
for (j in 4:18) {
ctbl <- confusion_table(j)
print(paste0("Pitch ", j, "; TPR: ", round(ctbl[2, 2] / sum(ctbl[2, ]), 4),
", TNR: ", round(ctbl[1, 1] / sum(ctbl[1, ]), 4),
", FPR: ", round(ctbl[1, 2] / sum(ctbl[1, ]), 4),
", FNR: ", round(ctbl[2, 1] / sum(ctbl[2, ]), 4)))
}
confusion_table(6)
confusion_table(7)
confusion_table(8)
confusion_table(9)
for (j in 4:18) {
ctbl <- confusion_table(j)
print(paste0(j, "Pitches; TPR: ", round(ctbl[2, 2] / sum(ctbl[2, ]), 4),
", TNR: ", round(ctbl[1, 1] / sum(ctbl[1, ]), 4), ", FPR: ",
round(ctbl[1, 2] / sum(ctbl[1, ]), 4), ", FNR: ",
round(ctbl[2, 1] / sum(ctbl[2, ]), 4)))
}
for (j in 4:14) {
ctbl <- confusion_table(j)
print(paste0(j , "Pitches; TPR: ", round(ctbl[2, 2] / sum(ctbl[2, ]), 4),
", TNR: ", round(ctbl[1, 1] / sum(ctbl[1, ]), 4), ", FPR: ",
round(ctbl[1, 2] / sum(ctbl[1, ]), 4), ", FNR: ",
round(ctbl[2, 1] / sum(ctbl[2, ]), 4)))
}
for (j in 4:14) {
ctbl <- confusion_table(j)
print(paste0(j, " Pitches; TPR: ", round(ctbl[2, 2] / sum(ctbl[2, ]), 4),
", TNR: ", round(ctbl[1, 1] / sum(ctbl[1, ]), 4), ", FPR: ",
round(ctbl[1, 2] / sum(ctbl[1, ]), 4), ", FNR: ",
round(ctbl[2, 1] / sum(ctbl[2, ]), 4)))
}
ct
table(2, 2)
matrix(0, nrow = 2, ncol = 2)
table(matrix(0, nrow = 2, ncol = 2))
as.table(matrix(0, nrow = 2, ncol = 2))
as.table(matrix(0, nrow = 2, ncol = 2)) %>%
as.table(matrix(0, nrow = 2, ncol = 2)) %>%
`rownames<-`(c(0, 1)) %>%
`colnames<-`(c(0, 1))
empty_ct <- as.table(matrix(0, nrow = 2, ncol = 2)) %>%
`rownames<-`(c(0, 1)) %>%
`colnames<-`(c(0, 1))
for (k in 4:14) {
empty_ct <- empty_ct + confusion_table(k)
print(empty_ct)
}
for (k in 4:14) {
empty_ct <- empty_ct + confusion_table(k)
print(paste(k, "Pitches"))
print(empty_ct)
}
for (k in 4:18) {
empty_ct <- empty_ct + confusion_table(k)
print(paste(k, "Pitches"))
print(empty_ct)
}
rm(empty_ct)
empty_ct <- as.table(matrix(0, nrow = 2, ncol = 2)) %>%
`rownames<-`(c(0, 1)) %>%
`colnames<-`(c(0, 1))
for (k in 4:18) {
empty_ct <- empty_ct + confusion_table(k)
print(paste(k, "Pitches"))
print(empty_ct)
rm(empty_ct)
}
empty_ct <- as.table(matrix(0, nrow = 2, ncol = 2)) %>%
`rownames<-`(c(0, 1)) %>%
`colnames<-`(c(0, 1))
for (k in 4:18) {
empty_ct <- empty_ct + confusion_table(k)
print(paste(k, "Pitches"))
print(empty_ct)
}
rm(empty_ct)
ct
confusion_table(7)
confusion_table(7) - confusion(table(6))
confusion_table(7) - confusion(table(6))
confusion_table(7) - confusion_table(6)
rm(empty_ct)
empty_ct <- as.table(matrix(0, nrow = 2, ncol = 2)) %>%
`rownames<-`(c(0, 1)) %>%
`colnames<-`(c(0, 1))
for (k in 4:18) {
empty_ct <- empty_ct + confusion_table(k)
print(empty_ct - confusion_table(k))
print(paste(k, "Pitches"))
print(empty_ct)
}
rm(empty_ct)
empty_ct <- as.table(matrix(0, nrow = 2, ncol = 2)) %>%
`rownames<-`(c(0, 1)) %>%
`colnames<-`(c(0, 1))
for (k in 4:18) {
empty_ct <- empty_ct + confusion_table(k)
print(paste(k, "Pitches"))
print(empty_ct)
}
rm(empty_ct)
ct
for (j in 4:14) {
ctbl <- confusion_table(j)
print(paste0(j, " Pitches; TPR: ", round(ctbl[2, 2] / sum(ctbl[2, ]), 4),
", TNR: ", round(ctbl[1, 1] / sum(ctbl[1, ]), 4), ", FPR: ",
round(ctbl[1, 2] / sum(ctbl[1, ]), 4), ", FNR: ",
round(ctbl[2, 1] / sum(ctbl[2, ]), 4)))
}
confusion_table(7)
ct - (confusion_table(4) + confusion_table(5) + confusion_table(6))
sum(diag(ct - (confusion_table(4) + confusion_table(5) + confusion_table(6)))) / sum(ct - (confusion_table(4) + confusion_table(5) + confusion_table(6)))
(confusion_table(4) + confusion_table(5) + confusion_table(6))
View(tn_counts)
tp_counts <- tp_sequences %>%
mutate(id = rownames(.)) %>%
group_by(sequences) %>%
summarise(count = n()) %>%
arrange(desc(count))
tn_counts <- tn_sequences %>%
mutate(id = rownames(.)) %>%
group_by(sequences) %>%
summarise(count = n()) %>%
arrange(desc(count))
View(tp_counts)
View(tn_counts)
tn_counts[[1]]
tn_counts$sequences[[1]]
tn_counts$sequences[[2]]
View(tp_sequences)
sequences_df %>%
mutate(id = rownames(.)) %>%
group_by(extending_pitch_sequence) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
View()
sequences_df %>%
mutate(id = rownames(.)) %>%
group_by(extending_pitch_sequence, outcome) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
View()
sequences_df %>%
mutate(id = rownames(.)) %>%
group_by(extending_pitch_sequence, outcome) %>%
summarise(count = n()) %>%
arrange(desc(count)) %>%
View()
sequences_df %>%
mutate(id = rownames(.)) %>%
group_by(extending_pitch_sequence, outcome) %>%
summarise(count = n()) %>%
filter(outcome == 1)
arrange(desc(count)) %>%
View()
sequences_df %>%
mutate(id = rownames(.)) %>%
group_by(extending_pitch_sequence, outcome) %>%
summarise(count = n()) %>%
filter(outcome == 1) %>%
arrange(desc(count)) %>%
View()
106/559
sequences_df %>%
mutate(id = rownames(.)) %>%
group_by(extending_pitch_sequence, outcome) %>%
summarise(count = n()) %>%
filter(outcome == 1) %>%
select(-outcome)
sequences_df %>%
mutate(id = rownames(.)) %>%
group_by(extending_pitch_sequence, outcome) %>%
summarise(count = n()) %>%
filter(outcome == 1) %>%
select(-outcome) %>%
arrange(desc(count)) %>%
View()
merge(tp_counts,
sequences_df %>%
mutate(id = rownames(.)) %>%
group_by(extending_pitch_sequence, outcome) %>%
summarise(count = n()) %>%
filter(outcome == 1) %>%
select(-outcome) %>%
arrange(desc(count)) %>%
`colnames<-`(c("sequences, counts")),
by = "sequences") %>%
View()
merge(tp_counts,
sequences_df %>%
mutate(id = rownames(.)) %>%
group_by(extending_pitch_sequence, outcome) %>%
summarise(count = n()) %>%
filter(outcome == 1) %>%
select(-outcome) %>%
arrange(desc(count)) %>%
`colnames<-`(c("sequences, counts")),
by = "sequences")
merge(tp_counts,
(sequences_df %>%
mutate(id = rownames(.)) %>%
group_by(extending_pitch_sequence, outcome) %>%
summarise(count = n()) %>%
filter(outcome == 1) %>%
select(-outcome) %>%
arrange(desc(count)) %>%
`colnames<-`(c("sequences, counts"))),
by = "sequences")
merge(tp_counts,
(sequences_df %>%
mutate(id = rownames(.)) %>%
group_by(extending_pitch_sequence, outcome) %>%
summarise(count = n()) %>%
filter(outcome == 1) %>%
select(-outcome) %>%
arrange(desc(count)) %>%
`colnames<-`(c("sequences, counts")) %>%
ungroup()),
by = "sequences")
(sequences_df %>%
mutate(id = rownames(.)) %>%
group_by(extending_pitch_sequence, outcome) %>%
summarise(count = n()) %>%
filter(outcome == 1) %>%
select(-outcome) %>%
arrange(desc(count)) %>%
`colnames<-`(c("sequences, counts")) %>%
ungroup() %>%
View())
merge(tp_counts,
sequences_df %>%
mutate(id = rownames(.)) %>%
group_by(extending_pitch_sequence, outcome) %>%
summarise(count = n()) %>%
filter(outcome == 1) %>%
select(-outcome) %>%
arrange(desc(count)) %>%
`colnames<-`(c("sequences", "counts")),
by = "sequences")
left_join(tp_counts,
sequences_df %>%
mutate(id = rownames(.)) %>%
group_by(extending_pitch_sequence, outcome) %>%
summarise(count = n()) %>%
filter(outcome == 1) %>%
select(-outcome) %>%
arrange(desc(count)) %>%
`colnames<-`(c("sequences", "counts")),
by = "sequences")
left_join(tp_counts,
sequences_df %>%
mutate(id = rownames(.)) %>%
group_by(extending_pitch_sequence, outcome) %>%
summarise(count = n()) %>%
filter(outcome == 1) %>%
select(-outcome) %>%
arrange(desc(count)) %>%
`colnames<-`(c("sequences", "counts")),
by = "sequences") %>%
View()
right_join(tp_counts,
sequences_df %>%
mutate(id = rownames(.)) %>%
group_by(extending_pitch_sequence, outcome) %>%
summarise(count = n()) %>%
filter(outcome == 1) %>%
select(-outcome) %>%
arrange(desc(count)) %>%
`colnames<-`(c("sequences", "counts")),
by = "sequences") %>%
View()
empty_ct <- as.table(matrix(0, nrow = 2, ncol = 2)) %>%
`rownames<-`(c(0, 1)) %>%
`colnames<-`(c(0, 1))
for (k in 4:18) {
empty_ct <- empty_ct + confusion_table(k)
print(paste(k, "Pitches"))
print(empty_ct)
}
rm(empty_ct)
8380 - 16
tn_counts$sequences[[1]]
tn_counts$sequences[[2]]
tn_counts$sequences[[3]]
tn_counts$sequences[[4]]
tn_counts$sequences[[45]
tn_counts$sequences[[5]]
tn_counts$sequences[[5]]
head(tn_counts)
View(head(tn_counts))
for (i in 1:4){
print(tn_counts$sequences[[i]])
}
for (i in 1:5){
print(tn_counts$sequences[[i]])
}
for (i in 1:6){
print(tn_counts$sequences[[i]])
}
for (i in 1:10){
print(tn_counts$sequences[[i]])
}
for (i in 1:10){
print(tn_counts[i, ])
}
for (i in 1:4){
print(tn_counts$sequences[[i]])
}
vapply
vapply(tn_counts$sequences, paste0)
sapply(tn_counts$sequences, paste0)
sapply(tn_counts$sequences[[1]], paste0)
sapply(tn_counts$sequences[[1]], paste)
map_chr(tn_counts$sequences[[1]], ~ paste(.x, collapse = ",")
map_chr(tn_counts$sequences[[1]], ~ paste(.x, collapse = ","))
print(map_chr(tn_counts$sequences[[1]], ~ paste(.x, collapse = ","))
print(map_chr(tn_counts$sequences[[1]], ~ paste(.x, collapse = ",")))
paste(map_chr(tn_counts$sequences[[1]], collapse = ",")
paste(tn_counts$sequences[[1]], collapse = ",")
paste(tn_counts$sequences[[1]], collapse = ", ")
for (i in 1:4){ }
for (i in 1:4){
print(paste(tn_counts$sequences[[i]], collapse = ", "))
}
for (i in 1:5){
print(paste(tn_counts$sequences[[i]], collapse = ", "))
}
