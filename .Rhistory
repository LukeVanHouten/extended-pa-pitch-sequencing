combined_indices_train <- integer(0)
for (i in 1:dim(x_train_array)[3]) {
indices_train <- which(rowSums(x_train_array[, , i]) > 1)
combined_indices_train <- c(combined_indices_train, indices_train)
}
x_train_array <- x_train_array[-combined_indices_train, , ]
x_train_array <- array(unlist(x_train_df),
dim = c(nrow(x_train_df), num_features,
length(timesteps)))
combined_indices_train <- integer(0)
for (i in 1:dim(x_train_array)[3]) {
indices_train <- which(rowSums(x_train_array[, , i]) > 1)
combined_indices_train <- c(combined_indices_train, indices_train)
}
which(apply(x_train_array, 1, function(slice) any(colSums(slice) > 1)))
rm(combined_indices)
rm(indices)
combined_indices_test <- integer(0)
for (i in 1:dim(x_test_array)[3]) {
indices_test <- which(rowSums(x_test_array[, , i]) > 1)
combined_indices_test <- c(combined_indices_test, indices_test)
}
x_test_array <- x_test_array[-combined_indices_test, , ]
x_test_df <- x_test_df[-combined_indices_test, ]
x_test_array <- array(unlist(x_test_df),
dim = c(nrow(x_test_df), num_features,
length(timesteps)))
combined_indices_test <- integer(0)
for (i in 1:dim(x_test_array)[3]) {
indices_test <- which(rowSums(x_test_array[, , i]) > 1)
combined_indices_test <- c(combined_indices_test, indices_test)
}
x_test_array <- x_test_array[-combined_indices_test, , ]
x_test_df <- x_test_df[-combined_indices_test, ]
x_test_array <- array(unlist(x_test_df),
dim = c(nrow(x_test_df), num_features,
length(timesteps)))
x_test_df <- select(test_df, -outcome)
x_train_df <- select(train_df, -outcome)
x_train_array <- array(unlist(x_train_df),
dim = c(nrow(x_train_df), num_features,
length(timesteps)))
combined_indices_train <- integer(0)
for (i in 1:dim(x_train_array)[3]) {
indices_train <- which(rowSums(x_train_array[, , i]) > 1)
combined_indices_train <- c(combined_indices_train, indices_train)
}
x_train_array <- x_train_array[-combined_indices_train, , ]
x_train_df <- x_train_df[-combined_indices_train, ]
x_test_array <- array(unlist(x_test_df),
dim = c(nrow(x_test_df), num_features,
length(timesteps)))
combined_indices_test <- integer(0)
for (i in 1:dim(x_test_array)[3]) {
indices_test <- which(rowSums(x_test_array[, , i]) > 1)
combined_indices_test <- c(combined_indices_test, indices_test)
}
x_test_array <- x_test_array[-combined_indices_test, , ]
x_test_df <- x_test_df[-combined_indices_test, ]
x_train_df <- select(train_df, -outcome)
x_test_df <- select(test_df, -outcome)
y_train_df <- train_df$outcome
y_test_df <- test_df$outcome
x_train_array <- array(unlist(x_train_df),
dim = c(nrow(x_train_df), num_features,
length(timesteps)))
y_train_df[-combined_indices_train, ]
y_train_df <- select(train_df, outcome)
y_test_df <- select(test_df, outcome)
x_train_array <- array(unlist(x_train_df),
dim = c(nrow(x_train_df), num_features,
length(timesteps)))
combined_indices_train <- integer(0)
for (i in 1:dim(x_train_array)[3]) {
indices_train <- which(rowSums(x_train_array[, , i]) > 1)
combined_indices_train <- c(combined_indices_train, indices_train)
}
x_train_array <- x_train_array[-combined_indices_train, , ]
y_train_df <- y_train_df[-combined_indices_train, ]
dim(x_train_array)
x_train_df <- select(train_df, -outcome)
x_test_df <- select(test_df, -outcome)
y_train_df <- select(train_df, outcome)
y_test_df <- select(test_df, outcome)
num_features <- length(unique(sort(str_sub(colnames(pitch_df), start = -3))))
x_train_array <- array(unlist(x_train_df),
dim = c(nrow(x_train_df), num_features,
length(timesteps)))
combined_indices_train <- integer(0)
for (i in 1:dim(x_train_array)[3]) {
indices_train <- which(rowSums(x_train_array[, , i]) > 1)
combined_indices_train <- c(combined_indices_train, indices_train)
}
x_train <- x_train_array[-combined_indices_train, , ]
y_train <- y_train_df[-combined_indices_train, ]
x_test_array <- array(unlist(x_test_df),
dim = c(nrow(x_test_df), num_features,
length(timesteps)))
combined_indices_test <- integer(0)
for (i in 1:dim(x_test_array)[3]) {
indices_test <- which(rowSums(x_test_array[, , i]) > 1)
combined_indices_test <- c(combined_indices_test, indices_test)
}
x_test <- x_test_array[-combined_indices_test, , ]
y_test <- y_test_df[-combined_indices_test, ]
nrow(x_test_df[-combined_indices_test, ])
nrow(y_test)
length(y_test)
x_test_fixed <- x_test_df[-combined_indices_test, ]
predicted_sequences <- cbind(y_test, prediction, x_test_fixed)
cbind(y_test, x_test_fixed)
rm(a)
unique(x_train)
unique(as.vector(x_train))
unique(as.vector(x_test))
unique(as.vector(x_test_array))
x_test_array[, , 1]
View(sorted_df)
View(sorted_df)
unique(as.vector(sorted_df))
unique(sorted_df)
unique(as.vector(as.matrix(sorted_df)))
which(any() == 2)
which(apply(sorted_df, 1, function(row) any(row == 2)))
View(one_hot_df)
which(apply(one_hot_df, 1, function(row) any(row == 2)))
which(apply(features_df, 1, function(row) any(row == 2)))
View(pitch_df)
which(apply(pitch_df, 1, function(row) any(row == 2)))
prefixes <- unique(gsub("_[01]$", "", names(features_df)))
pitch_df <- as.data.frame(sapply(prefixes, function(a) {
rowSums(features_df[, grepl(a, names(features_df))])
}))
colnames(pitch_df) <- prefixes
which(apply(pitch_df, 1, function(row) any(row == 2)))
View(features_df)
features_df[2825, ]
names(features_df)[which(features_df[2825, ] == 1)]
names(one_hot_df)[which(one_hot_df[2825, ] >= 1)]
names(pitch_df)[which(pitch_df[2825, ] >= 1)]
rm(model)
rm(history)
rm(prediction)
model <- keras_model_sequential() %>%
layer_dense(input_shape = dim(x_train)[2:3],
units = length(timesteps)) %>%
layer_simple_rnn(units = length(timesteps),
input_shape = dim(x_train)[2:3]) %>%
layer_dense(units = 1, activation = "tanh")
model %>% compile(
loss = "binary_crossentropy",
optimizer = optimizer_adam(),
metrics = list('Precision')
)
summary(model)
history <- model %>% fit(
x_train, y_train,
epochs = 16,
batch_size = 128,
validation_split = 0.1
)
model %>% evaluate(x_test, y_test)
prediction <- as.list(model %>% predict(x_test) %>% `>`(0.5) %>%
k_cast("int32"))
ct <- table(y_test, prediction)
ct
x_test_fixed <- x_test_df[-combined_indices_test, ]
predicted_sequences <- cbind(y_test, prediction, x_test_fixed)
View(predicted_sequences)
incorrect_predictions <- predicted_sequences %>%
filter(y_test != prediction)
incorrect_sequence <- incorrect_predictions %>%
select(-y_test, -prediction)
View(incorrect_predictions)
incorrect_sequences <- incorrect_sequence %>%
mutate(sequences = apply(incorrect_sequence, 1, function(x) {
names(incorrect_sequence)[which(x == 1)]
})) %>%
select(sequences)
View(incorrect_sequences)
incorrect_pitches <- cbind(select(incorrect_predictions, y_test_df, prediction),
incorrect_sequences) %>%
rename(actual = y_test_df)
incorrect_pitches <- cbind(select(incorrect_predictions, y_test, prediction),
incorrect_sequences) %>%
rename(actual = y_test)
View(incorrect_pitches)
pitch_names <- map(1:max(lengths(incorrect_pitches$sequences)), function(i) {
map_chr(incorrect_pitches$sequences, ~ ifelse(i <= length(.x), .x[i],
NA_character_))
}) %>%
as.data.frame() %>%
setNames(paste0("Pitch_", 1:max(lengths(incorrect_pitches$sequences))))
View(pitch_names)
incorrect_sequences <- incorrect_sequence %>%
mutate(sequences = apply(incorrect_sequence, 1, function(x) {
names(incorrect_sequence)[which(x == 1)]
})) %>%
select(sequences) %>%
mutate(sequences = map(sequences, ~ gsub("^\\d+_", "", .)))
View(incorrect_sequences)
incorrect_pitches <- cbind(select(incorrect_predictions, y_test, prediction),
incorrect_sequences) %>%
rename(actual = y_test)
pitch_names <- map(1:max(lengths(incorrect_pitches$sequences)), function(i) {
map_chr(incorrect_pitches$sequences, ~ ifelse(i <= length(.x), .x[i],
NA_character_))
}) %>%
as.data.frame() %>%
setNames(paste0("Pitch_", 1:max(lengths(incorrect_pitches$sequences))))
View(pitch_names)
View(pitch_names)
count_and_rate <- function(column) {
counts <- table(na.omit(column))
data.frame(
count = as.integer(counts),
rate = prop.table(counts)
)
}
counts_and_rates_df <- do.call(rbind, lapply(pitch_names, count_and_rate)) %>%
select(-count) %>%
setNames(c("var", "rate")) %>%
group_by(var) %>%
mutate(rowid = row_number()) %>%
pivot_wider(names_from = rowid, values_from = rate, names_prefix = "rate_")
View(counts_and_rates_df)
View(incorrect_sequence)
unique(incorrect_sequence$11_FS)
unique(incorrect_sequence$"11_FS")
View(incorrect_predictions)
unique(incorrect_predictions$11_FS)
unique(incorrect_predictions"$11_FS")
unique(incorrect_predictions$"11_FS")
combined_indices_test
View(x_test_df[combined_indices_test, ]
View(x_test_df[combined_indices_test, ])
View(x_test_df[combined_indices_test, 150:228])
View(x_test_df[combined_indices_test, 125:228])
View(x_test_df[combined_indices_test, 120:228])
View(x_test_df[combined_indices_test, 121:228])
sum(x_test_df[combined_indices_test, 121:228])
sum(x_test_df[combined_indices_test, 181:228])
sum(x_test_df[combined_indices_test, 171:228])
sum(x_test_df[combined_indices_test, 161:228])
View(x_test_df[combined_indices_test, 161:228])
View(x_test_df[combined_indices_test, 151:228])
sum(x_test_df[combined_indices_test, 151:228])
sum(x_test_df[combined_indices_test, 141:228])
sum(x_test_df[combined_indices_test, 131:228])
sum(x_test_df[combined_indices_test, 121:228])
View(counts_and_rates_df)
rates_df <- do.call(rbind, lapply(pitch_names, count_and_rate)) %>%
select(-count) %>%
setNames(c("var", "rate")) %>%
group_by(var) %>%
mutate(rowid = row_number()) %>%
pivot_wider(names_from = rowid, values_from = rate,
names_prefix = "pitch_") %>%
arrange(desc(pitch_1))
View(rates_df)
rates_df <- do.call(rbind, lapply(pitch_names, count_and_rate)) %>%
select(-count) %>%
setNames(c("type", "rate")) %>%
group_by(type) %>%
mutate(rowid = row_number()) %>%
pivot_wider(names_from = rowid, values_from = rate,
names_prefix = "pitch_") %>%
arrange(desc(pitch_1))
View(rates_df)
sum(select(rates_df, -type))
sum(as.numeric(select(rates_df, -type)))
sum(mutate_all(select(rates_df, -type), function(x) as.numeric(as.character(x))))
sum(mutate_all(as.data.frame(select(rates_df, -type)), function(x) as.numeric(as.character(x))))
sum(mutate_all(as.data.frame(select(rates_df, -type)), function(x) as.numeric(as.character(x))), .fns = ~replace_na(.,0))
sum(mutate_all(replace(as.data.frame(select(rates_df, -type)), is.na(.), 0, function(x) as.numeric(as.character(x))))
sum(mutate_all(replace(as.data.frame(select(rates_df, -type)), is.na(.), 0), function(x) as.numeric(as.character(x))))
sum(mutate_all(replace(as.data.frame(select(rates_df, -type)), is.na(across()), 0), function(x) as.numeric(as.character(x))))
sum(mutate_all(replace(as.data.frame(select(rates_df, -type)), is.na(), 0), function(x) as.numeric(as.character(x))))
sum(mutate_all(replace(as.data.frame(select(rates_df, -type)), is.na(as.data.frame(select(rates_df, -type))), 0), function(x) as.numeric(as.character(x))))
rates_df <- do.call(rbind, lapply(pitch_names, count_and_rate)) %>%
select(-count) %>%
setNames(c("type", "rate")) %>%
group_by(type) %>%
mutate(rowid = row_number()) %>%
pivot_wider(names_from = rowid, values_from = rate,
names_prefix = "pitch_") %>%
arrange(desc(pitch_1)) %>%
replace(is.na(.), 0)
View(rates_df)
sum(mutate_all(as.data.frame(select(rates_df, -type)), function(x) as.numeric(as.character(x))))
sum(select(rates_df, -type)
sum(select(rates_df, -type))
rates_df <- do.call(rbind, lapply(pitch_names, count_and_rate)) %>%
select(-count) %>%
setNames(c("type", "rate")) %>%
group_by(type) %>%
mutate(rowid = row_number()) %>%
pivot_wider(names_from = rowid, values_from = rate,
names_prefix = "pitch_") %>%
arrange(desc(pitch_1)) %>%
replace(is.na(.), 0) %>%
ungroup()
View(rates_df)
sum(select(rates_df, -type))
View(do.call(rbind, lapply(pitch_names, count_and_rate)))
rates_df <- do.call(rbind, lapply(pitch_names, count_and_rate)) %>%
setNames(c("count", "type", "rate")) %>%
group_by(type) %>%
mutate(rowid = row_number()) %>%
pivot_wider(names_from = rowid, values_from = c(count, rate),
names_prefix = "pitch_") %>%
arrange(desc(pitch_1)) %>%
replace(is.na(.), 0) %>%
ungroup()
rates_df <- do.call(rbind, lapply(pitch_names, count_and_rate)) %>%
setNames(c("count", "type", "rate")) %>%
group_by(type) %>%
mutate(rowid = row_number()) %>%
pivot_wider(names_from = rowid, values_from = rate,
names_prefix = "pitch_") %>%
arrange(desc(pitch_1)) %>%
replace(is.na(.), 0) %>%
ungroup()
View(rates_df)
rates_df <- do.call(rbind, lapply(pitch_names, count_and_rate)) %>%
setNames(c("count", "type", "rate")) %>%
group_by(type) %>%
mutate(rowid = row_number()) %>%
pivot_wider(names_from = rowid, values_from = c(rate, count),
names_sep = "_") %>%
arrange(desc(rate_1)) %>%
replace(is.na(.), 0) %>%
ungroup()
View(rates_df)
max(ncol(select(rates_df, starts_with("rate_"))))
c("var", unlist(lapply(1:max(ncol(select(rates_df, starts_with("rate_")))), function(x c(paste0("count_", x), paste0("rate_", x))))))
c("var", unlist(lapply(1:max(ncol(select(rates_df, starts_with("rate_")))), function(x) {c(paste0("count_", x), paste0("rate_", x)})))))
c("var", unlist(lapply(1:max(ncol(select(rates_df, starts_with("rate_")))), function(x) c(paste0("count_", x), paste0("rate_", x)))))
rates_df <- do.call(rbind, lapply(pitch_names, count_and_rate)) %>%
setNames(c("count", "type", "rate")) %>%
group_by(type) %>%
mutate(rowid = row_number()) %>%
pivot_wider(names_from = rowid, values_from = c(rate, count),
names_sep = "_") %>%
arrange(desc(rate_1)) %>%
replace(is.na(.), 0) %>%
ungroup() %>%
select(c("var", unlist(lapply(1:max(ncol(select(rates_df,
starts_with("rate_")))),
function(x) c(paste0("count_", x), paste0("rate_",
x))))))
rates_df <- do.call(rbind, lapply(pitch_names, count_and_rate)) %>%
setNames(c("count", "type", "rate")) %>%
group_by(type) %>%
mutate(rowid = row_number()) %>%
pivot_wider(names_from = rowid, values_from = c(rate, count),
names_sep = "_") %>%
arrange(desc(rate_1)) %>%
replace(is.na(.), 0) %>%
ungroup() %>%
select(c("type", unlist(lapply(1:max(ncol(select(rates_df,
starts_with("rate_")))),
function(x) c(paste0("count_", x), paste0("rate_",
x))))))
View(rates_df)
View(rates_df)
View(predicted_sequences)
false_positives <- predicted_sequences %>%
filter(y_test == 0 & prediction == 1)
View(false_positives)
false_positives <- predicted_sequences %>%
filter(y_test == 0 & prediction == 1)
fp_sequence <- false_positives %>%
select(-y_test, -prediction)
fp_sequences <- fp_sequence %>%
mutate(sequences = apply(fp_sequence, 1, function(x) {
names(fp_sequence)[which(x == 1)]})) %>%
select(sequences) %>%
mutate(sequences = map(sequences, ~ gsub("^\\d+_", "", .)))
fp_pitches <- cbind(select(false_positives, y_test, prediction),
fp_sequences) %>%
rename(actual = y_test)
View(fp_pitches)
View(fp_sequences)
false_positives <- predicted_sequences %>%
filter(y_test == 0 & prediction == 1) %>%
select(-y_test, -prediction)
fp_sequences <- false_positives %>%
mutate(sequences = apply(false_positives, 1, function(x) {
names(false_positives)[which(x == 1)]})) %>%
select(sequences) %>%
mutate(sequences = map(sequences, ~ gsub("^\\d+_", "", .)))
rm(fp_pitches)
rm(fp_sequence)
View(fp_sequences)
fp_pitches <- map(1:max(lengths(fp_sequences$sequences)), function(i) {
map_chr(fp_sequences$sequences, ~ ifelse(i <= length(.x), .x[i],
NA_character_))}) %>%
as.data.frame() %>%
setNames(paste0("Pitch_", 1:max(lengths(fp_sequences$sequences))))
View(fp_pitches)
fp_rates_df <- do.call(rbind, lapply(fp_pitches, count_and_rate)) %>%
setNames(c("count", "type", "rate")) %>%
group_by(type) %>%
mutate(rowid = row_number()) %>%
pivot_wider(names_from = rowid, values_from = c(rate, count),
names_sep = "_") %>%
arrange(desc(rate_1)) %>%
replace(is.na(.), 0) %>%
ungroup() %>%
select(c("type", unlist(lapply(1:max(ncol(select(rates_df,
starts_with("rate_")))),
function(x) c(paste0("count_", x), paste0("rate_",
x))))))
fp_rates_df <- do.call(rbind, lapply(fp_pitches, count_and_rate)) %>%
setNames(c("count", "type", "rate")) %>%
group_by(type) %>%
mutate(rowid = row_number()) %>%
pivot_wider(names_from = rowid, values_from = c(rate, count),
names_sep = "_") %>%
arrange(desc(rate_1)) %>%
replace(is.na(.), 0) %>%
ungroup() %>%
select(c("type", unlist(lapply(1:max(ncol(select(fp_rates_df,
starts_with("rate_")))),
function(x) c(paste0("count_", x), paste0("rate_",
x))))))
fp_rates_df <- do.call(rbind, lapply(fp_pitches, count_and_rate)) %>%
setNames(c("count", "type", "rate")) %>%
group_by(type) %>%
mutate(rowid = row_number()) %>%
pivot_wider(names_from = rowid, values_from = c(rate, count),
names_sep = "_") %>%
arrange(desc(rate_1)) %>%
replace(is.na(.), 0) %>%
ungroup() %>%
select(c("type", unlist(lapply(1:max(ncol(select(starts_with("rate_")))),
function(x) c(paste0("count_", x), paste0("rate_",
x))))))
View(fp_pitches)
fp_rates_df <- do.call(rbind, lapply(fp_pitches, count_and_rate)) %>%
setNames(c("count", "type", "rate")) %>%
group_by(type) %>%
mutate(rowid = row_number()) %>%
pivot_wider(names_from = rowid, values_from = c(rate, count),
names_sep = "_") %>%
arrange(desc(rate_1)) %>%
replace(is.na(.), 0) %>%
ungroup() %>%
select(c("type", unlist(lapply(1:max(ncol(select(fp_pitches,
starts_with("Pitch_")))),
function(x) c(paste0("count_", x), paste0("rate_",
x))))))
View(fp_rates_df)
false_negatives <- predicted_sequences %>%
filter(y_test == 1 & prediction == 0) %>%
select(-y_test, -prediction)
fn_sequences <- false_negatives %>%
mutate(sequences = apply(false_negatives, 1, function(x) {
names(false_negatives)[which(x == 1)]})) %>%
select(sequences) %>%
mutate(sequences = map(sequences, ~ gsub("^\\d+_", "", .)))
fn_pitches <- map(1:max(lengths(fn_sequences$sequences)), function(i) {
map_chr(fn_sequences$sequences, ~ ifelse(i <= length(.x), .x[i],
NA_character_))}) %>%
as.data.frame() %>%
setNames(paste0("Pitch_", 1:max(lengths(fn_sequences$sequences))))
fn_rates_df <- do.call(rbind, lapply(fn_pitches, count_and_rate)) %>%
setNames(c("count", "type", "rate")) %>%
group_by(type) %>%
mutate(rowid = row_number()) %>%
pivot_wider(names_from = rowid, values_from = c(rate, count),
names_sep = "_") %>%
arrange(desc(rate_1)) %>%
replace(is.na(.), 0) %>%
ungroup() %>%
select(c("type", unlist(lapply(1:max(ncol(select(fn_pitches,
starts_with("Pitch_")))),
function(x) c(paste0("count_", x),
paste0("rate_", x))))))
View(fn_rates_df)
correct_predictions <- predicted_sequences %>%
filter(y_test == prediction) %>%
select(-y_test, -prediction)
correct_sequences <- correct_predictions %>%
mutate(sequences = apply(correct_predictions, 1, function(x) {
names(correct_predictions)[which(x == 1)]})) %>%
select(sequences) %>%
mutate(sequences = map(sequences, ~ gsub("^\\d+_", "", .)))
correct_pitches <- map(1:max(lengths(correct_sequences$sequences)), function(i) {
map_chr(correct_sequences$sequences, ~ ifelse(i <= length(.x), .x[i],
NA_character_))}) %>%
as.data.frame() %>%
setNames(paste0("Pitch_", 1:max(lengths(correct_sequences$sequences))))
correct_rates_df <- do.call(rbind, lapply(correct_pitches, count_and_rate)) %>%
setNames(c("count", "type", "rate")) %>%
group_by(type) %>%
mutate(rowid = row_number()) %>%
pivot_wider(names_from = rowid, values_from = c(rate, count),
names_sep = "_") %>%
arrange(desc(rate_1)) %>%
replace(is.na(.), 0) %>%
ungroup() %>%
select(c("type", unlist(lapply(1:max(ncol(select(correct_pitches,
starts_with("Pitch_")))),
function(x) c(paste0("count_", x),
paste0("rate_", x))))))
ct
16072+15791
diag(ct)
sum(diag(ct))
View(correct_rates_df)
