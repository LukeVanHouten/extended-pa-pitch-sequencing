select(1, 2, select(order(colnames(.)))
View(wide_df)
wide_df <- long_df %>%
mutate(value = 1) %>%
pivot_wider(names_from = pitch, values_from = value, values_fill = list(value = 0)) %>%
select(1, 2, select(order(colnames(.))))
sort(colnames(long_df)
sort(colnames(long_df))
wide_df <- long_df %>%
mutate(value = 1) %>%
pivot_wider(names_from = pitch, values_from = value, values_fill = list(value = 0)) %>%
select(outcome, pa_id, select(sort(colnames(.)), -outcome, -pa_id))
wide_df %>% select(sort(colnames(.)), -outcome, -pa_id)
long_df <- unnest(test_df, cols = extending_pitch_sequence) %>%
group_by(pa_id) %>%
mutate(pitch = paste0(row_number(), "_", extending_pitch_sequence)) %>%
select(outcome, pa_id, pitch) %>%
ungroup()
View(long_df)
wide_df %>% select(sort(colnames(.)), -outcome, -pa_id)
wide_df <- long_df %>%
mutate(value = 1) %>%
pivot_wider(names_from = pitch, values_from = value, values_fill = list(value = 0)) %>%
select(outcome, pa_id, colnames(select(sort(colnames(.)), -outcome, -pa_id)))
colnames(select(sort(colnames(.)), -outcome, -pa_id))
wide_df %>% colnames(select(sort(colnames(.)), -outcome, -pa_id))
wide_df %>% colnames(select(sort(colnames(.))))
wide_df %>% colnames(select(sort(colnames(.))))
wide_df %>% colnames(select(sort(colnames(wide_df))))
wide_df %>% colnames(select(sort(colnames(wide_df))))
wide_df %>% colnames(select(all_of(sort(colnames(wide_df)))))
wide_df %>% colnames(select(!!!syms(sort(colnames(wide_df)))))
wide_df %>% colnames(select(!!!rlnag::syms(sort(colnames(wide_df)))))
wide_df %>% colnames(select(!!!rlangag::syms(sort(colnames(wide_df)))))
wide_df %>% colnames(select(!!!rlang::syms(sort(colnames(wide_df)))))
wide_df %>% colnames(select(sort(colnames(.))
wide_df %>% colnames(select(sort(colnames(.)))
print(wide_df %>% colnames(select(sort(colnames(.)))
print(wide_df %>% colnames(select(sort(colnames(.))))
print(wide_df %>% colnames(select(sort(colnames(.)))))
print(wide_df %>% select(sort(colnames(.))))
print(typeof(wide_df %>% select(sort(colnames(.))))
print(typeof(wide_df %>% select(sort(colnames(.)))))
print(colnames(wide_df %>% select(sort(colnames(.)))))
print(select(colnames(wide_df %>% select(sort(colnames(.))))), -outcome, -pa_id)
one_hot <- cbind(wide_df[, 1:2], df[, sort(colnames(wide_df)[-(1:2)])])
one_hot <- cbind(wide_df[, 1:2], wide_df[, sort(colnames(wide_df)[-(1:2)])])
View(one_hot)
wide_df <- long_df %>%
mutate(value = 1) %>%
pivot_wider(names_from = pitch, values_from = value, values_fill = list(value = 0))
View(wide_df)
one_hot <- cbind(wide_df[, 1:2], wide_df[, sort(colnames(wide_df)[-(1:2)])])
View(one_hot)
wide_df <- long_df %>%
mutate(value = 1) %>%
pivot_wider(names_from = pitch, values_from = value, values_fill = list(value = 0))
one_hot_df <- cbind(wide_df[, 1:2], wide_df[, sort(colnames(wide_df)[-(1:2)])])
View(one_hot_df)
long_df <- unnest(sequences_df, cols = extending_pitch_sequence) %>%
group_by(pa_id) %>%
mutate(pitch = paste0(row_number(), "_", extending_pitch_sequence)) %>%
select(outcome, pa_id, pitch) %>%
ungroup()
sequences_df <- more_stats_df %>%
select(game, pitcher, batter, pitch_type, at_bat_number, extended_pa_length,
pitch_outcome, extending_pitch) %>%
group_by(pitcher, game) %>%
mutate(at_bat_number = dense_rank(at_bat_number)) %>%
ungroup() %>%
group_by(pitcher, game, at_bat_number, pitch_outcome, batter) %>%
summarise(pitch_sequence = list(paste0(pitch_type, "_")),
extending_pitches = list(extending_pitch), pitches = n() + 2,
.groups = 'drop') %>%
mutate(extending_pitch_sequence = map2(pitch_sequence, extending_pitches,
paste0),
pa_id = paste0(game, "_", at_bat_number)) %>%
select(pitcher, pa_id, pitches, extending_pitch_sequence, pitch_outcome,
batter, -pitch_sequence, -extending_pitches, -game, -at_bat_number) %>%
slice(-which(sapply(extending_pitch_sequence,
function(x) {any(c("_0", "_1") %in% x)}))) %>%
mutate(pa_id = str_sub(pa_id, start = -8),
outcome = as.character(pitch_outcome)) %>%
select(-pitch_outcome)
View(sequences_df)
long_df <- unnest(sequences_df, cols = extending_pitch_sequence) %>%
select(-pitcher, -pitches, -batter) %>%
group_by(pa_id) %>%
mutate(pitch = paste0(row_number(), "_", extending_pitch_sequence)) %>%
select(outcome, pa_id, pitch) %>%
ungroup()
View(long_df)
length(unique(long_df$pitch))
wide_df <- long_df %>%
mutate(value = 1) %>%
pivot_wider(names_from = pitch, values_from = value, values_fill = list(value = 0))
one_hot_df <- cbind(wide_df[, 1:2], wide_df[, sort(colnames(wide_df)[-(1:2)])])
View(one_hot_df)
127002*926
View(one_hot_df)
rm(one_hot)
rm(one_hot_pitch_types)
rm(one_hot_encoded)
View(conn)
test_df <- sequences_df %>%
filter(pitcher == 112526) %>%
View(test_df)
test_df <- sequences_df %>%
filter(pitcher == 112526)
View(test_df)
rm(i)
rm(max_length)
rm(transformed_data)
one_hot_df[1, ]
one_hot_df[1, ][2, ]
one_hot_df[1, ][, -2
one_hot_df[1, ][, -2]
one_hot_df[1, ][, -c(1, 2)]
one_hot_df[1, ][, -c(1, 2)] == 1
one_hot_df[one_hot_df[1, ][, -c(1, 2)] == 1]
one_hot_df[1, ][one_hot_df[1, ][, -c(1, 2)] == 1]
one_hot_df[1, ]
one_hot_df[1, ][, 1:10]
one_hot_df[1, ][, 1:20]
one_hot_df[1, ][, 1:30]
one_hot_df[1, ][, 1:40]
length(one_hot_df$1_ep_0 == 1)
length(one_hot_df$1_EP_0 == 1)
length(one_hot_df$"1_EP_0" == 1)
one_hot_df$"1_EP_0" == 1
which(one_hot_df$"1_EP_0" == 1)
length(which(one_hot_df$"1_EP_0" == 1))
colnames(one_hot_df)
colnames(one_hot_df)[, -c(1, 2)]
colnames(one_hot_df)[1]
colnames(one_hot_df)[-1]
colnames(one_hot_df)[-c(1, 2)]
for (i in colnames(one_hot_df)[-c(1, 2)]) {
print(length(which(one_hot_df$i == 1)))
}
length(which(one_hot_df$"1_EP_0" == 1))
for (i in colnames(one_hot_df)[-c(1, 2)]) {
print(length(which(one_hot_df$as.character(i) == 1)))
}
for (i in colnames(one_hot_df)[-c(1, 2)]) {
print(length(which(one_hot_df$"i" == 1)))
}
for (i in colnames(one_hot_df)[-c(1, 2)]) {
a <- length(which(one_hot_df$"i" == 1)))
for (i in colnames(one_hot_df)[-c(1, 2)]) {
a <- length(which(one_hot_df$"i" == 1))
}
which(one_hot_df$"9_SV_1" == 1)
length(which(one_hot_df$"9_SV_1" == 1))
for (i in colnames(one_hot_df)[-c(1, 2)]) {
print(length(which(one_hot_df[[i]] == 1)))
}
View(as.data.frame(t(colSums(one_hot_df[-c(1, 2)]))))
View(as.data.frame(t(sort(colSums(one_hot_df[-c(1, 2)])))))
View(as.data.frame(t(sort(colSums(one_hot_df[-c(1, 2)])), desc = TRUE)))
View(as.data.frame(t(sort(colSums(one_hot_df[-c(1, 2)])), decreasing = TRUE)))
View(as.data.frame(t(sort(colSums(one_hot_df[-c(1, 2)]), decreasing = TRUE))))
long_df <- unnest(test_df, cols = extending_pitch_sequence) %>%
select(-pitcher, -pitches, -batter) %>%
group_by(pa_id) %>%
mutate(pitch = paste0(row_number(), "_", extending_pitch_sequence)) %>%
select(outcome, pa_id, pitch) %>%
ungroup()
View(long_df)
wide_df <- long_df %>%
mutate(value = 1) %>%
pivot_wider(names_from = pitch, values_from = value,
values_fill = list(value = 0))
one_hot_df <- cbind(wide_df[, 1:2], wide_df[, sort(colnames(wide_df)[-(1:2)])])
View(one_hot_df)
View(as.data.frame(t(sort(colSums(one_hot_df[-c(1, 2)]), decreasing = TRUE))))
names(one_hot_df[1, ])[one_hot_df[1, ] == 1]
names(one_hot_df[1:2, ])[one_hot_df[1:2, ] == 1]
names(one_hot_df[1, ])[one_hot_df[1, ] == 1]
View(test_df)
wide_df <- long_df %>%
mutate(value = 1) %>%
pivot_wider(names_from = pitch, values_from = value,
values_fill = list(value = 0))
one_hot_df <- cbind(wide_df[, 1:2],
wide_df[, sort(colnames(wide_df)[-(1:2)])]) %>%
select(-pa_id)
View(one_hot_df)
wide_df <- long_df %>%
mutate(value = 1) %>%
pivot_wider(names_from = pitch, values_from = value,
values_fill = list(value = 0))
one_hot_df <- cbind(wide_df[, 1:2],
wide_df[, sort(colnames(wide_df)[-(1:2)])]) %>%
select(-pa_id) %>%
mutate(outcome = as.numeric(outcome))
View(one_hot_df)
rm(a)
rm(i)
View(as.data.frame(t(sort(colSums(one_hot_df, decreasing = TRUE))))
View(as.data.frame(t(sort(colSums(one_hot_df), decreasing = TRUE))))
280/421
View(more_stats_df)
unique(more_stats_df$pitch_type)
nrow(filter(more_stats_df, pitch_type == "FO"))
nrow(filter(more_stats_df, pitch_type == "sl"))
nrow(filter(more_stats_df, pitch_type == "SL"))
nrow(filter(more_stats_df, pitch_type == "FF"))
nrow(filter(more_stats_df, pitch_type == "SI"))
nrow(filter(more_stats_df, pitch_type == "CH"))
nrow(filter(more_stats_df, pitch_type == "CU"))
unique(more_stats_df$pitch_type)
nrow(filter(more_stats_df, pitch_type == "FC"))
nrow(filter(more_stats_df, pitch_type == "FS"))
nrow(filter(more_stats_df, pitch_type == "PO"))
nrow(filter(more_stats_df, pitch_type == "KN"))
nrow(filter(more_stats_df, pitch_type == "EP"))
nrow(filter(more_stats_df, pitch_type == "CS"))
unique(more_stats_df$pitch_type)
nrow(filter(more_stats_df, pitch_type == "FA"))
nrow(filter(more_stats_df, pitch_type == "ST"))
nrow(filter(more_stats_df, pitch_type == "SV"))
nrow(filter(more_stats_df, pitch_type == "SC"))
nrow(filter(more_stats_df, pitch_type == "FO"))
sequences_df <- more_stats_df %>%
select(game, pitcher, batter, pitch_type, at_bat_number, extended_pa_length,
pitch_outcome, extending_pitch) %>%
group_by(pitcher, game) %>%
mutate(at_bat_number = dense_rank(at_bat_number)) %>%
ungroup() %>%
group_by(pitcher, game, at_bat_number, pitch_outcome, batter) %>%
summarise(pitch_sequence = list(paste0(pitch_type, "_")),
extending_pitches = list(extending_pitch), pitches = n() + 2,
.groups = 'drop') %>%
mutate(extending_pitch_sequence = map2(pitch_sequence, extending_pitches,
paste0),
pa_id = paste0(game, "_", at_bat_number)) %>%
select(pitcher, pa_id, pitches, extending_pitch_sequence, pitch_outcome,
batter, -pitch_sequence, -extending_pitches, -game,
-at_bat_number) %>%
slice(-which(sapply(extending_pitch_sequence,
function(x) {any(c("_0", "_1", "PO_0", "PO_1", "CS_0",
"CS_1", "FA_0", "FA_1", "SC_1",
"FO_0", "FO_1") %in% x)}))) %>%
mutate(pa_id = str_sub(pa_id, start = -8),
outcome = as.character(pitch_outcome)) %>%
select(-pitch_outcome)
View(sequences_df)
test_df <- sequences_df %>%
filter(pitcher == 112526)
View(test_df)
long_df <- unnest(test_df, cols = extending_pitch_sequence) %>%
select(-pitcher, -pitches, -batter) %>%
group_by(pa_id) %>%
mutate(pitch = paste0(row_number(), "_", extending_pitch_sequence)) %>%
select(outcome, pa_id, pitch) %>%
ungroup()
View(long_df)
wide_df <- long_df %>%
mutate(value = 1) %>%
pivot_wider(names_from = pitch, values_from = value,
values_fill = list(value = 0))
one_hot_df <- cbind(wide_df[, 1:2],
wide_df[, sort(colnames(wide_df)[-(1:2)])]) %>%
select(-pa_id) %>%
mutate(outcome = as.numeric(outcome))
View(one_hot_df)
View(one_hot_df)
long_df <- unnest(sequences_df, cols = extending_pitch_sequence) %>%
select(-pitcher, -pitches, -batter) %>%
group_by(pa_id) %>%
mutate(pitch = paste0(row_number(), "_", extending_pitch_sequence)) %>%
select(outcome, pa_id, pitch) %>%
ungroup()
View(long_df)
wide_df <- long_df %>%
mutate(value = 1) %>%
pivot_wider(names_from = pitch, values_from = value,
values_fill = list(value = 0))
one_hot_df <- cbind(wide_df[, 1:2],
wide_df[, sort(colnames(wide_df)[-(1:2)])]) %>%
select(-pa_id) %>%
mutate(outcome = as.numeric(outcome))
View(one_hot_df)
sequences_df <- more_stats_df %>%
select(game, pitcher, batter, pitch_type, at_bat_number, extended_pa_length,
pitch_outcome, extending_pitch) %>%
group_by(pitcher, game) %>%
mutate(at_bat_number = dense_rank(at_bat_number)) %>%
ungroup() %>%
group_by(pitcher, game, at_bat_number, pitch_outcome, batter) %>%
summarise(pitch_sequence = list(paste0(pitch_type, "_")),
extending_pitches = list(extending_pitch), pitches = n() + 2,
.groups = 'drop') %>%
mutate(extending_pitch_sequence = map2(pitch_sequence, extending_pitches,
paste0),
pa_id = paste0(game, "_", at_bat_number)) %>%
select(pitcher, pa_id, pitches, extending_pitch_sequence, pitch_outcome,
batter, -pitch_sequence, -extending_pitches, -game,
-at_bat_number) %>%
slice(-which(sapply(extending_pitch_sequence,
function(x) {any(c("_0", "_1", "PO_0", "PO_1", "EP_0",
"EP_1", "CS_0", "CS_1", "FA_0",
"FA_1", "SC_1", "FO_0",
"FO_1") %in% x)}))) %>%
mutate(pa_id = str_sub(pa_id, start = -8),
outcome = as.character(pitch_outcome)) %>%
select(-pitch_outcome)
View(sequences_df)
test_df <- sequences_df %>%
filter(pitcher == 112526)
View(test_df)
long_df <- unnest(sequences_df, cols = extending_pitch_sequence) %>%
select(-pitcher, -pitches, -batter) %>%
group_by(pa_id) %>%
mutate(pitch = paste0(row_number(), "_", extending_pitch_sequence)) %>%
select(outcome, pa_id, pitch) %>%
ungroup()
View(long_df)
wide_df <- long_df %>%
mutate(value = 1) %>%
pivot_wider(names_from = pitch, values_from = value,
values_fill = list(value = 0))
one_hot_df <- cbind(wide_df[, 1:2],
wide_df[, sort(colnames(wide_df)[-(1:2)])]) %>%
select(-pa_id) %>%
mutate(outcome = as.numeric(outcome))
View(one_hot_df)
one_hot_df <- cbind(wide_df[, 1:2],
wide_df[, sort(colnames(wide_df)[-c(1:2)])]) %>%
select(-pa_id) %>%
mutate(outcome = as.numeric(outcome))
View(one_hot_df)
long_df <- unnest(test_df, cols = extending_pitch_sequence) %>%
select(-pitcher, -pitches, -batter) %>%
group_by(pa_id) %>%
mutate(pitch = paste0(row_number(), "_", extending_pitch_sequence)) %>%
select(outcome, pa_id, pitch) %>%
ungroup()
View(long_df)
wide_df <- long_df %>%
mutate(value = 1) %>%
pivot_wider(names_from = pitch, values_from = value,
values_fill = list(value = 0))
one_hot_df <- cbind(wide_df[, 1:2],
wide_df[, sort(colnames(wide_df)[-c(1:2)])]) %>%
select(-pa_id) %>%
mutate(outcome = as.numeric(outcome))
View(one_hot_df)
wide_df <- long_df %>%
mutate(value = 1) %>%
pivot_wider(names_from = pitch, values_from = value,
values_fill = list(value = 0)) %>%
mutate(id = rowname())
wide_df <- long_df %>%
mutate(value = 1) %>%
pivot_wider(names_from = pitch, values_from = value,
values_fill = list(value = 0)) %>%
mutate(id = rownames())
one_hot_df <- cbind(wide_df[, 1:2],
wide_df[, sort(colnames(wide_df)[-c(1:2)])]) %>%
select(-pa_id) %>%
mutate(outcome = as.numeric(outcome), id = rownames(.))
View(one_hot_df)
set.seed(333)
train_df <- one_hot_df %>%
sample_frac(0.8)
test_df <- anti_join(one_hot_df, train_df, by = "id") %>%
select(-id)
View(train_df)
x_train_df <- select(train_df, -outcome, -id)
View(x_train_df)
x_train_df <- select(train_df, -outcome, -id)
y_train_df <- select(train_df, outcome)
x_test_df <- select(test_df, -outcome)
View(y_train_df)
View(train_df)
source("C:/Users/lukev/extended-pa-pitch-sequencing/Project.R", echo=TRUE)
View(long_df)
View(one_hot_df)
rm(stats_df)
gc()
View(one_hot_df)
source("C:/Users/lukev/extended-pa-pitch-sequencing/Project.R", echo=TRUE)
View(sequences_df)
names(sort(sequences_df$pitcher))
names(sort(sequences_df$pitcher))[1]
names(sort(-table(sequences_df$pitcher)))[1]
names(sort(-table(sequences_df$pitcher)))
test_df <- sequences_df %>%
filter(pitcher == 543037)
View(test_df)
long_df <- unnest(test_df, cols = extending_pitch_sequence) %>%
select(-pitcher, -pitches, -batter) %>%
group_by(pa_id) %>%
mutate(pitch = paste0(row_number(), "_", extending_pitch_sequence)) %>%
select(outcome, pa_id, pitch) %>%
ungroup()
View(long_df)
wide_df <- long_df %>%
mutate(value = 1) %>%
pivot_wider(names_from = pitch, values_from = value,
values_fill = list(value = 0))
one_hot_df <- cbind(wide_df[, 1:2],
wide_df[, sort(colnames(wide_df)[-c(1:2)])]) %>%
select(-pa_id) %>%
mutate(outcome = as.numeric(outcome), id = rownames(.))
View(one_hot_df)
train_df <- one_hot_df %>%
sample_frac(0.8)
test_df <- anti_join(one_hot_df, train_df, by = "id") %>%
select(-id)
x_train_df <- select(train_df, -outcome, -id)
y_train_df <- select(train_df, outcome)
x_test_df <- select(test_df, -outcome)
View(x_train_df)
head(one_hot_df)
head(one_hot_df[1:10])
head(one_hot_df[1:30])
head(one_hot_df[1:40])
head(one_hot_df[1:50])
View(as.data.frame(one_hot_df[1, ]))
which(one_hot_df[1, ] == 1)
one_hot_df[1, ][which(one_hot_df[1, ] == 1)]
cbind(one_hot_df$outcome[[1]], one_hot_df[1, ][which(one_hot_df[1, ] == 1)])
cbind(one_hot_df[1, ][[1]], one_hot_df[1, ][which(one_hot_df[1, ] == 1)])
View(as.data.frame(cbind(one_hot_df[1, ][[1]], one_hot_df[1, ][which(one_hot_df[1, ] == 1)])))
View(as.data.frame(cbind(one_hot_df[1, ][[1]], one_hot_df[1, ][which(one_hot_df[1, ] == 1)][-"id"])))
View(as.data.frame(cbind(one_hot_df[1, ][[1]], one_hot_df[1, ][which(one_hot_df[1, ] == 1)][-c("id")])))
View(as.data.frame(cbind(one_hot_df[1, ][[1]], one_hot_df[1, ][which(one_hot_df[1, ] == 1)][, -c("id")])))
View(as.data.frame(cbind(one_hot_df[1, ][[1]], one_hot_df[1, ][which(one_hot_df[1, ] == 1)][, -ncol(one_hot_df)])))
View(as.data.frame(cbind(one_hot_df[1, ][[1]], (one_hot_df[1, ][which(one_hot_df[1, ] == 1)])[, -ncol(one_hot_df)])))
ncol(one_hot_df)
one_hot_df[1, ][which(one_hot_df[1, ] == 1)][, -ncol(one_hot_df)]
one_hot_df[1, ][which(one_hot_df[1, ] == 1)]
one_hot_df[1, ][which(one_hot_df[1, ] == 1)][, -1]
one_hot_df[1, ][which(one_hot_df[1, ] == 1)][, -ncol(one_hot_df[1, ][which(one_hot_df[1, ] == 1)])]
View(as.data.frame(cbind(one_hot_df[1, ][[1]], one_hot_df[1, ][which(one_hot_df[1, ] == 1)][, -ncol(one_hot_df[1, ][which(one_hot_df[1, ] == 1)])])))
cbind(one_hot_df[1, ][[1]], one_hot_df[1, ][which(one_hot_df[1, ] == 1)][, -ncol(one_hot_df[1, ][which(one_hot_df[1, ] == 1)])])
head(one_hot_df)
str_order(colnames(one_hot_df))
str_sort(colnames(one_hot_df))
str_sort(colnames(one_hot_df), numer=T)
str_sort(colnames(one_hot_df), numeric=T)
one_hot_df <- cbind(wide_df[, 1:2],
wide_df[, str_sort(colnames(wide_df)[-c(1:2)],
numeric=TRUE)]) %>%
select(-pa_id) %>%
mutate(outcome = as.numeric(outcome), id = rownames(.))
View(one_hot_df)
train_df <- one_hot_df %>%
sample_frac(0.8)
test_df <- anti_join(one_hot_df, train_df, by = "id") %>%
select(-id)
x_train_df <- select(train_df, -outcome, -id)
y_train_df <- select(train_df, outcome)
x_test_df <- select(test_df, -outcome)
y_test_df <- select(test_df, outcome)
View(x_train_df)
tail(colnames(x_train_df))
tail(colnames(x_train_df), n = 1)
str_sub(tail(colnames(x_train_df), n = 1), -5)
str_sub(tail(colnames(x_train_df), n = 1), end = -5)
str_sub(tail(colnames(x_train_df), n = 1), end = -6)
str_sub("100_FF_0", end = -6)
as.numeric(str_sub(tail(colnames(x_train_df), n = 1), end = -6))
timesteps <- as.numeric(str_sub(tail(colnames(x_train_df), n = 1), end = -6))
typeof(timesteps)
colnames(x_train_df)
startsWith(colnames(x_train_df), "1")
startsWith(colnames(x_train_df), "1_")
as.numeric(startsWith(colnames(x_train_df), "1_"))
sum(as.numeric(startsWith(colnames(x_train_df), "1_")))
str_sub(colnames(x_train_df))
str_sub(colnames(x_train_df), start = -5)
str_sub(colnames(x_train_df), start = -6)
str_sub(colnames(x_train_df), start = -5)
unique(str_sub(colnames(x_train_df), start = -5))
length(unique(str_sub(colnames(x_train_df), start = -5)))
features <- length(unique(str_sub(colnames(x_train_df), start = -5)))
typeof(features)
install.packages("keras")
install.packages("tensorflow")
x_train_array <- array(data = x_train, dim = c(nrow(train_data), timesteps,
features))
x_train_array <- array(data = x_train_df, dim = c(nrow(train_df), timesteps,
features))
View(x_train_array)
View(x_train_array)
x_train_array
View(x_train_array)
x_train_array[[1]]
train_df_id <- one_hot_df %>%
sample_frac(0.8)
test_df <- anti_join(one_hot_df, train_df_id, by = "id") %>%
select(-id)
train_df <- train_df_id %>%
select(-id)
x_train_df <- select(train_df, -outcome)
y_train_df <- select(train_df, outcome)
x_test_df <- select(test_df, -outcome)
y_test_df <- select(test_df, outcome)
x_train_array <- array(data = x_train_df, dim = c(nrow(train_df), timesteps,
features))
x_test_array <- array(data = x_test_df, dim = c(nrow(test_df), timesteps,
features))
library(keras)
library(tensorflow)
model <- keras_model_sequential() %>%
layer_simple_rnn(units = 50, input_shape = c(timesteps, features)) %>%
layer_dense(units = 1, activation = 'sigmoid')
install_tensorflow()
